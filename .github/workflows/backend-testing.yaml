name: backend-testing

on:
  push:
    branches: ["master", "develop"]
  pull_request:
    branches: ["master", "develop"]
env:
  PORT: 4350
  MONGODB_CONNECTION: ${{ secrets.MONGODB_CONNECTION }}
  PASSPORT_SECRET: ${{ secrets.PASSPORT_SECRET }}
  TEST_TYPE: UNIT
  NOTICE_EMAIL_ADDRESS: ${{ secrets.NOTICE_EMAIL_ADDRESS }}
  NOTICE_EMAIL_PASSWORD: ${{ secrets.NOTICE_EMAIL_PASSWORD }}
  TEST_MONGODB_CONNECTION: ${{ secrets.TEST_MONGODB_CONNECTION }}
  IMAGE_ACCESS_ID: AKIAQZQHBP4MR2MWFXXI
  IMAGE_KEY: SPhsEua64OAq0L81vDDJJMjytsEJMcwqXqiX4m5c
  AWS_ACCESS_KEY_ID: AKIAQZQHBP4MZ54NR7MU
  AWS_SECRET_ACCESS_KEY: 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
  MONKEY_API_KEY: bc39fa1cd620f7fe410104d36e22ef1e41dffec6
    
jobs:
  run_tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    strategy:
      matrix:
        node-version: [16.15.1]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Installing Nodejs dependencies
        run: npm install
      - name: Installing Python
        run: pip freeze > requirements.txt
      - name: Run unit tests
        run: npm run unit
        env: 
          PYTHON_PATH: $(which python)
      - name: Run integration tests
        run: npm run integration
        env:
          TEST_TYPE: INTEGRATION
          

      - name: Run all tests
        run: npm run all
