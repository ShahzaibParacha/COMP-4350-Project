const mongoose = require('mongoose');
const Comment = require('../schema/Comment-schema');

//create a new comment
const createComment = async (req, res) =>{
    const {post_id, user_id, content, comment_date} = req.body;

    //try to add the comment to the db
    try{
        const comment = await Comment.create({post_id, user_id, content, comment_date});
        res.status(200).json(comment);
    }catch(error){
        res.status(400).json({error: error.message});
    }
}

//get all comments for a specific post ??
//TODO: get all the comments using a post_id
const getAllComments = async (req, res) => {
    const comments = await Comment.find({}).sort({createdAt: -1});
    res.status(200).json(comments);
}

//get a single comment by its id
const getComment = async (req, res) => {
    const{ id } = req.params;

    if(!mongoose.Types.ObjectId.isValid(id)){
        return res.status(404).json({error: 'No such comment.'});
    }

    const comment = await Comment.findById(id);
    if(!comment){
        return res.status(404).json({error: 'No such comment'});
    }

    res.status(200).json(comment);
}

//delete a comment
const deleteComment = async (req, res) =>{
    const { id } = req.params;
    if(!mongoose.Types.ObjectId.isValid(id)){
        return res.status(404).json({error: 'No such comment'});
    }

    const comment = await Comment.findOneAndDelete(
        {_id: id},
        {$set: updateData},
         {useFindAndModify: false}
        );
    if(!comment){
        return res.status(404).json({error: 'No such comment'});
    }

    res.status(200).json(comment);
}

//update a comment
const updateComment = async (req, res) => {
    const{ id } = req.params;
    if(!mongoose.Types.ObjectId.isValid(id)){
        return res.status(404).json({error: 'No such comment'});
    }

    const comment = await Comment.findOneAndUpdate(
        {_id:id},
        {$set: updateData},
         {useFindAndModify: false},
        {...req.body}
        )

    if(!comment){
        return res.status(404).json({error: 'No such comment'});
    }

    res.status(200).json(comment);
}

module.exports = {
    createComment,
    getAllComments,
    getComment,
    deleteComment,
    updateComment
}